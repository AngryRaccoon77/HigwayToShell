  version: '3.8'

  services:

    redis:
      image: redis:7.0
      container_name: redis
      ports:
        - '6379:6379'
      networks:
        - backend

    rabbitmq:
      image: rabbitmq:3.11-management
      container_name: rabbitmq
      environment:
        RABBITMQ_DEFAULT_USER: guest
        RABBITMQ_DEFAULT_PASS: guest
      ports:
        - '5672:5672'
        - '15672:15672'
      networks:
        - backend

    postgres:
      image: postgres:latest
      container_name: postgres
      environment:
        POSTGRES_DB: tasks
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
      ports:
        - '5432:5432'
      networks:
        - backend

    logstash:
      image: opensearchproject/logstash-oss-with-opensearch-output-plugin:7.16.2
      container_name: logstash
      volumes:
        - ./logstash/pipeline:/usr/share/logstash/pipeline
      ports:
        - "5000:5000"
      depends_on:
        - opensearch
      deploy:
        resources:
          limits:
            cpus: "1.0"
      networks:
        - backend


    prometheus:
      image: prom/prometheus:latest
      container_name: prometheus
      volumes:
        - ./prometheus.yml:/etc/prometheus/prometheus.yml
      ports:
        - '9090:9090'
      networks:
        - backend

    grafana:
      image: grafana/grafana:latest
      container_name: grafana
      ports:
        - '3000:3000'
      networks:
        - backend
      volumes:
        - ./grafana/provisioning:/etc/grafana/provisioning

    pgadmin:
      image: dpage/pgadmin4:latest
      container_name: pgadmin
      environment:
        PGADMIN_DEFAULT_EMAIL: admin@admin.com
        PGADMIN_DEFAULT_PASSWORD: admin
      ports:
        - '5050:80'
      networks:
        - backend

    opensearch:
      image: opensearchproject/opensearch:2.10.0
      container_name: opensearch
      environment:
        - discovery.type=single-node
        - plugins.security.disabled=true
        - DISABLE_INSTALL_DEMO_CONFIG=true
      ports:
        - "9200:9200"
        - "9300:9300"
      deploy:
        resources:
          limits:
            cpus: "2.0"
            memory: 2G
      networks:
        - backend
    opensearch-dashboards:
      image: opensearchproject/opensearch-dashboards:2.10.0
      container_name: opensearch-dashboards
      ports:
        - "5601:5601"
      environment:
        - OPENSEARCH_HOSTS=http://opensearch:9200
        - DISABLE_SECURITY_DASHBOARDS_PLUGIN=true
      depends_on:
        - opensearch
      deploy:
        resources:
          limits:
            cpus: "0.5"
            memory: 512M
      networks:
        - backend
    domain:
      build:
        context: ./domain
        dockerfile: Dockerfile
      container_name: domain
      ports:
        - "9091:9091"
      depends_on:
        - postgres
        - rabbitmq
        - redis
      networks:
        - backend

    gateway:
      build:
        context: ./gateway
        dockerfile: Dockerfile
      container_name: gateway
      ports:
        - "8080:8080"
      environment:
        LOGBACK_URL: "logstash" # Имя сервиса Logstash или IP-адрес
        LOGBACK_PORT: "5000"   # Порт Logstash
      depends_on:
        - domain
        - redis
        - rabbitmq
        - postgres
        - prometheus
        - grafana
        - logstash
        - opensearch
      networks:
        - backend


  networks:
    backend:
      driver: bridge
